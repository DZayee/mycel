syntax = "proto3";
package mycel.registry;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "mycel/registry/access_control.proto";
import "mycel/registry/subdomain_config.proto";

option go_package = "github.com/mycel-domain/mycel/x/registry/types";

message TopLevelDomain {
  string name = 1;
  google.protobuf.Timestamp expirationDate = 2 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
  SubdomainConfig subdomainConfig = 3;
  uint64 subdomainCount = 4;
  repeated AccessControl accessControl = 5;
  repeated cosmos.base.v1beta1.Coin totalWithdrawalAmount = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message TopLevelDomainFee {
  repeated cosmos.base.v1beta1.Coin totalFee = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string burnWeight = 2;
  cosmos.base.v1beta1.Coin feeToBurn = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castvalue) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  cosmos.base.v1beta1.Coin feeToTreasury = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castvalue) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}
